'use strict';

var ts = require('typesystem');

var slice = Function.prototype.call.bind(Array.prototype.slice);

module.exports = function (nodeFunction, Promise, noArgs) {
    ts.checkArgument(nodeFunction, ts.isFunction);
    ts.checkArgument(Promise, ts.isFunction);

    noArgs = ts.checkArgument(noArgs, ts.isBoolean, false);

    return function () {
        var self = this;
        var args = noArgs ? [] : slice(arguments);

        return new Promise(function (resolve, reject) {
            args.push(function (error, response) {
                if (error) {
                    reject(error);
                } else {
                    resolve(response);
                }
            });

            nodeFunction.apply(self, args);
        });
    };
};
