/* # Setup palettes ---------- */
/* setup-palettes */
[data-module="Setup palettes"] [data-test="setup-palettes"] .assert-equal {
  -result: PASS;
  -description: 'Returns a map'; }

/* setup-palettes */
[data-module="Setup palettes"] [data-test="setup-palettes"] .assert-equal {
  -result: PASS;
  -description: 'Returns a merged map of default & custom palettes'; }

/* setup-palettes */
[data-module="Setup palettes"] [data-test="setup-palettes"] .assert-equal {
  -result: PASS;
  -description: 'Returns a custom palette value'; }

/* # palette() ---------- */
/* palette() */
[data-module="palette()"] [data-test="palette()"] .assert-equal {
  -result: PASS;
  -description: 'Returns a color using a string'; }

/* palette() */
[data-module="palette()"] [data-test="palette()"] .assert-equal {
  -result: PASS;
  -description: 'Returns a color using a palette and default tone (none specified)'; }

/* palette() */
[data-module="palette()"] [data-test="palette()"] .assert-equal {
  -result: PASS;
  -description: 'Returns a color using a string within a sub group'; }

/* # SUMMARY ---------- */
/* 6 Tests: */
/*  - 6 Passed */
/*  - 0 Failed */
/* -------------------- */